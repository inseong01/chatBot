{"ast":null,"code":"import supabase from \"./supabase/supabaseClient.js\";\n\n// join a room\nconst roomTwo = supabase.channel('room-one', {\n  config: {\n    broadcast: {\n      self: true\n    }\n  }\n});\n\n// subscribe to the room\n// roomTwo\n//   .on(\n//     'presence',\n//     { event: 'sync' },\n//     () => {\n//       const newState = roomTwo.presenceState()\n//       console.log('sync', newState)\n//     }\n//   )\n//   .on('presence', { event: 'join' }, ({ key, newPresences }) => {\n//     console.log('join', key, newPresences)\n//   })\n//   .on('presence', { event: 'leave' }, ({ key, leftPresences }) => {\n//     console.log('leave', key, leftPresences)\n//   })\n//   .subscribe()\n\nconst userStatus = {\n  user: 'user-1',\n  online_at: new Date().toISOString()\n};\nroomTwo.subscribe(async status => {\n  if (status !== 'SUBSCRIBED') return;\n  const presenceTrackStatus = await roomTwo.track(userStatus);\n  console.log(presenceTrackStatus);\n});","map":{"version":3,"names":["supabase","roomTwo","channel","config","broadcast","self","userStatus","user","online_at","Date","toISOString","subscribe","status","presenceTrackStatus","track","console","log"],"sources":["C:/Users/Inseong/Desktop/folder/project/chat-bot/client 4/src/index.js"],"sourcesContent":["import supabase from \"./supabase/supabaseClient.js\";\r\n\r\n// join a room\r\nconst roomTwo = supabase.channel('room-one', {\r\n  config: {\r\n    broadcast: { self: true }\r\n  }\r\n});\r\n\r\n// subscribe to the room\r\n// roomTwo\r\n//   .on(\r\n//     'presence',\r\n//     { event: 'sync' },\r\n//     () => {\r\n//       const newState = roomTwo.presenceState()\r\n//       console.log('sync', newState)\r\n//     }\r\n//   )\r\n//   .on('presence', { event: 'join' }, ({ key, newPresences }) => {\r\n//     console.log('join', key, newPresences)\r\n//   })\r\n//   .on('presence', { event: 'leave' }, ({ key, leftPresences }) => {\r\n//     console.log('leave', key, leftPresences)\r\n//   })\r\n//   .subscribe()\r\n\r\nconst userStatus = {\r\n  user: 'user-1',\r\n  online_at: new Date().toISOString(),\r\n}\r\n\r\nroomTwo.subscribe(async (status) => {\r\n  if (status !== 'SUBSCRIBED') return;\r\n\r\n  const presenceTrackStatus = await roomTwo.track(userStatus)\r\n  console.log(presenceTrackStatus);\r\n})"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,8BAA8B;;AAEnD;AACA,MAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAO,CAAC,UAAU,EAAE;EAC3CC,MAAM,EAAE;IACNC,SAAS,EAAE;MAAEC,IAAI,EAAE;IAAK;EAC1B;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG;EACjBC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC;AAEDT,OAAO,CAACU,SAAS,CAAC,MAAOC,MAAM,IAAK;EAClC,IAAIA,MAAM,KAAK,YAAY,EAAE;EAE7B,MAAMC,mBAAmB,GAAG,MAAMZ,OAAO,CAACa,KAAK,CAACR,UAAU,CAAC;EAC3DS,OAAO,CAACC,GAAG,CAACH,mBAAmB,CAAC;AAClC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}