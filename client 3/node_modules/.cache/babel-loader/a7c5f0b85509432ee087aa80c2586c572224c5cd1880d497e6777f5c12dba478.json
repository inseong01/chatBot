{"ast":null,"code":"import supabase from \"./supabase/supabaseClient.js\";\n\n// join a room\nconst channelA = supabase.channel('room-one', {\n  config: {\n    broadcast: {\n      self: true\n    }\n  }\n});\nconst channelB = supabase.channel('room-one', {\n  config: {\n    broadcast: {\n      self: true\n    }\n  }\n});\n\n// function to log any messages we receive\nfunction messageReceived(payload) {\n  console.log(payload);\n}\n\n// subscribe to the room\nchannelA.on('broadcast', {\n  event: 'test'\n}, payload => messageReceived(payload)).subscribe();\nchannelB.subscribe(status => {\n  // Wait for successful connection\n  if (status !== 'SUBSCRIBED') {\n    return null;\n  }\n  channelB.send({\n    type: 'broadcast',\n    event: 'test',\n    payload: {\n      message: 'hello, world'\n    }\n  });\n});","map":{"version":3,"names":["supabase","channelA","channel","config","broadcast","self","channelB","messageReceived","payload","console","log","on","event","subscribe","status","send","type","message"],"sources":["C:/Users/Inseong/Desktop/folder/project/chat-bot/client 3/src/index.js"],"sourcesContent":["import supabase from \"./supabase/supabaseClient.js\";\r\n\r\n// join a room\r\nconst channelA = supabase.channel('room-one', {\r\n  config: {\r\n    broadcast: { self: true }\r\n  }\r\n});\r\nconst channelB = supabase.channel('room-one', {\r\n  config: {\r\n    broadcast: { self: true }\r\n  }\r\n});\r\n\r\n// function to log any messages we receive\r\nfunction messageReceived(payload) {\r\n  console.log(payload);\r\n}\r\n\r\n// subscribe to the room\r\nchannelA\r\n  .on(\r\n    'broadcast',\r\n    { event: 'test' },\r\n    (payload) => messageReceived(payload)\r\n  )\r\n  .subscribe()\r\n\r\nchannelB.subscribe((status) => {\r\n  // Wait for successful connection\r\n  if (status !== 'SUBSCRIBED') {\r\n    return null\r\n  }\r\n  channelB.send({\r\n    type: 'broadcast',\r\n    event: 'test',\r\n    payload: { message: 'hello, world' },\r\n  })\r\n})"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,8BAA8B;;AAEnD;AACA,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,OAAO,CAAC,UAAU,EAAE;EAC5CC,MAAM,EAAE;IACNC,SAAS,EAAE;MAAEC,IAAI,EAAE;IAAK;EAC1B;AACF,CAAC,CAAC;AACF,MAAMC,QAAQ,GAAGN,QAAQ,CAACE,OAAO,CAAC,UAAU,EAAE;EAC5CC,MAAM,EAAE;IACNC,SAAS,EAAE;MAAEC,IAAI,EAAE;IAAK;EAC1B;AACF,CAAC,CAAC;;AAEF;AACA,SAASE,eAAeA,CAACC,OAAO,EAAE;EAChCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;AACtB;;AAEA;AACAP,QAAQ,CACLU,EAAE,CACD,WAAW,EACX;EAAEC,KAAK,EAAE;AAAO,CAAC,EAChBJ,OAAO,IAAKD,eAAe,CAACC,OAAO,CACtC,CAAC,CACAK,SAAS,CAAC,CAAC;AAEdP,QAAQ,CAACO,SAAS,CAAEC,MAAM,IAAK;EAC7B;EACA,IAAIA,MAAM,KAAK,YAAY,EAAE;IAC3B,OAAO,IAAI;EACb;EACAR,QAAQ,CAACS,IAAI,CAAC;IACZC,IAAI,EAAE,WAAW;IACjBJ,KAAK,EAAE,MAAM;IACbJ,OAAO,EAAE;MAAES,OAAO,EAAE;IAAe;EACrC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}