{"ast":null,"code":"import supabase from \"./supabase/supabaseClient.js\";\n\n// join a room\nconst channelA = supabase.channel('room-one');\n\n// function to log any messages we receive\nfunction messageReceived(payload) {\n  console.log(payload);\n}\n\n// subscribe to the room\nchannelA.on('broadcast', {\n  event: 'test'\n}, payload => messageReceived(payload)).subscribe();\nsetInterval(() => {\n  channelA.send({\n    type: 'broadcast',\n    event: 'test',\n    payload: {\n      message: 'hello, world'\n    }\n  });\n}, 1000);","map":{"version":3,"names":["supabase","channelA","channel","messageReceived","payload","console","log","on","event","subscribe","setInterval","send","type","message"],"sources":["C:/Users/Inseong/Desktop/folder/project/chat-bot/client 3/src/index.js"],"sourcesContent":["import supabase from \"./supabase/supabaseClient.js\";\r\n\r\n// join a room\r\nconst channelA = supabase.channel('room-one');\r\n\r\n// function to log any messages we receive\r\nfunction messageReceived(payload) {\r\n  console.log(payload);\r\n}\r\n\r\n// subscribe to the room\r\nchannelA\r\n  .on(\r\n    'broadcast',\r\n    { event: 'test' },\r\n    (payload) => messageReceived(payload)\r\n  )\r\n  .subscribe()\r\n\r\nsetInterval(() => {\r\n  channelA.send({\r\n    type: 'broadcast',\r\n    event: 'test',\r\n    payload: { message: 'hello, world' },\r\n  })\r\n}, 1000)"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,8BAA8B;;AAEnD;AACA,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,OAAO,CAAC,UAAU,CAAC;;AAE7C;AACA,SAASC,eAAeA,CAACC,OAAO,EAAE;EAChCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;AACtB;;AAEA;AACAH,QAAQ,CACLM,EAAE,CACD,WAAW,EACX;EAAEC,KAAK,EAAE;AAAO,CAAC,EAChBJ,OAAO,IAAKD,eAAe,CAACC,OAAO,CACtC,CAAC,CACAK,SAAS,CAAC,CAAC;AAEdC,WAAW,CAAC,MAAM;EAChBT,QAAQ,CAACU,IAAI,CAAC;IACZC,IAAI,EAAE,WAAW;IACjBJ,KAAK,EAAE,MAAM;IACbJ,OAAO,EAAE;MAAES,OAAO,EAAE;IAAe;EACrC,CAAC,CAAC;AACJ,CAAC,EAAE,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}