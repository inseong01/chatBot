{"ast":null,"code":"import supabase from \"./supabase/supabaseClient.js\";\n\n// join a room\nconst channelA = supabase.channel('room-one', {\n  config: {\n    broadcast: {\n      self: true\n    }\n  }\n});\n\n// function to log any messages we receive\nfunction messageReceived(payload) {\n  console.log(payload);\n}\n\n// subscribe to the room\nchannelA.on('broadcast', {\n  event: 'test'\n}, payload => messageReceived(payload)).subscribe();\nchannelA.send({\n  type: 'broadcast',\n  event: 'test',\n  payload: {\n    message: 'hello, world'\n  }\n});\nsetInterval(() => {}, 0);","map":{"version":3,"names":["supabase","channelA","channel","config","broadcast","self","messageReceived","payload","console","log","on","event","subscribe","send","type","message","setInterval"],"sources":["C:/Users/Inseong/Desktop/folder/project/chat-bot/client 3/src/index.js"],"sourcesContent":["import supabase from \"./supabase/supabaseClient.js\";\r\n\r\n// join a room\r\nconst channelA = supabase.channel('room-one', {\r\n  config: {\r\n    broadcast: { self: true }\r\n  }\r\n});\r\n\r\n// function to log any messages we receive\r\nfunction messageReceived(payload) {\r\n  console.log(payload);\r\n}\r\n\r\n// subscribe to the room\r\nchannelA\r\n  .on(\r\n    'broadcast',\r\n    { event: 'test' },\r\n    (payload) => messageReceived(payload)\r\n  )\r\n  .subscribe()\r\n\r\nchannelA.send({\r\n  type: 'broadcast',\r\n  event: 'test',\r\n  payload: { message: 'hello, world' },\r\n})\r\nsetInterval(() => {\r\n}, 0)"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,8BAA8B;;AAEnD;AACA,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,OAAO,CAAC,UAAU,EAAE;EAC5CC,MAAM,EAAE;IACNC,SAAS,EAAE;MAAEC,IAAI,EAAE;IAAK;EAC1B;AACF,CAAC,CAAC;;AAEF;AACA,SAASC,eAAeA,CAACC,OAAO,EAAE;EAChCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;AACtB;;AAEA;AACAN,QAAQ,CACLS,EAAE,CACD,WAAW,EACX;EAAEC,KAAK,EAAE;AAAO,CAAC,EAChBJ,OAAO,IAAKD,eAAe,CAACC,OAAO,CACtC,CAAC,CACAK,SAAS,CAAC,CAAC;AAEdX,QAAQ,CAACY,IAAI,CAAC;EACZC,IAAI,EAAE,WAAW;EACjBH,KAAK,EAAE,MAAM;EACbJ,OAAO,EAAE;IAAEQ,OAAO,EAAE;EAAe;AACrC,CAAC,CAAC;AACFC,WAAW,CAAC,MAAM,CAClB,CAAC,EAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}